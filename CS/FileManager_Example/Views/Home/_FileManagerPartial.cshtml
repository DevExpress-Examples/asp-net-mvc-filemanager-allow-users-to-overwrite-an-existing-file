@model string
@using FileManager_Example.Helpers;

@Html.DevExpress().FileManager(settings => {
    settings.Name = "fileManager";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "FileManagerPartial" };
    settings.DownloadRouteValues = new { Controller = "Home", Action = "FileManagerPartialDownload" };
    settings.SettingsToolbar.ShowDownloadButton = true;
    settings.Settings.ThumbnailFolder = Url.Content("~/Content/FileManager/Thumbnails");
    settings.SettingsEditing.Assign(FMSettingsHelper.CreateFileManagerEditingSettings());
    settings.SettingsUpload.Enabled = true;
    settings.SettingsUpload.UseAdvancedUploadMode = true;
    settings.SettingsUpload.AdvancedModeSettings.EnableMultiSelect = true;
    settings.ClientSideEvents.FileUploading = "uploadStarted";
    settings.FileUploading = (s, e) => {
        // Comment these lines to upload the file***********************
        e.Cancel = true;
        throw new Exception("Upload is not allowed in online examples");
        // *************************************************************

        bool isOverride = false;
        Boolean.TryParse(HttpContext.Current.Request.Form["overwrite"], out isOverride);
        if (isOverride) {
            var existFile = (s as ASPxFileManager).SelectedFolder.GetFiles().FirstOrDefault(f => f.Name.Equals(e.FileName, StringComparison.InvariantCultureIgnoreCase));
            if (existFile != null)
                File.Delete(Path.Combine(Server.MapPath("~"), existFile.RelativeName)); // A path depends on the RootFolder in the file manager
        }
    };
}).BindToFolder(Model).GetHtml()
